"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tasksRouter = void 0;
const express_1 = require("express");
const validators_1 = require("../@shared/validators");
const isAuthenticated_validator_1 = require("../@shared/validators/isAuthenticated.validator");
const tsyringe_1 = require("tsyringe");
const middlewares_1 = require("../user/middlewares");
const service_1 = require("./service");
const controller_1 = require("./controller");
const schemas_1 = require("./schemas");
const middlewares_2 = require("./middlewares");
exports.tasksRouter = (0, express_1.Router)();
tsyringe_1.container.registerSingleton("TasksService", service_1.TasksService);
const tasksController = tsyringe_1.container.resolve(controller_1.TasksController);
exports.tasksRouter.post("/", isAuthenticated_validator_1.isAuthenticated, (0, validators_1.validateBody)(schemas_1.taskCreateSchema), (req, res) => tasksController.create(req, res));
exports.tasksRouter.get("/", isAuthenticated_validator_1.isAuthenticated, (req, res) => tasksController.findAll(req, res));
exports.tasksRouter.get("/:id", isAuthenticated_validator_1.isAuthenticated, middlewares_2.validateTaskId, (req, res) => tasksController.findOne(req, res));
exports.tasksRouter.patch("/:id", isAuthenticated_validator_1.isAuthenticated, middlewares_2.validateTaskId, middlewares_1.isTaskOwner, (0, validators_1.validateBody)(schemas_1.taskUpdateSchema), (req, res) => tasksController.updateOne(req, res));
exports.tasksRouter.delete("/:id", isAuthenticated_validator_1.isAuthenticated, middlewares_2.validateTaskId, middlewares_1.isTaskOwner, (req, res) => tasksController.deleteOne(req, res));
